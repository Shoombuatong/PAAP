#######set directory
setwd('D:\\Peptide prediction\\Antihypertensive peptides\\CLassification\\AHTP')
#######Load package
library(caret)
library(randomForest)
library(Interpol)
library(protr)
library(seqinr)

D1= read.csv("tetra-new.csv", header = TRUE) 
D2 = read.csv("penta-new.csv", header = TRUE) 
D3 = read.csv("hexa-new.csv", header = TRUE) 
D4 = read.csv("medium-new.csv", header = TRUE) 
D5 = read.csv("large-new.csv", header = TRUE) 

data1 = rbind(D1,D2,D3,D4)
data2 =  D5
n = ncol(data1)
aac = c(1:20)
dpc = c(21:420)

index = c(aac, dpc, n)
internal <- data1[,index]
external <- data2[,index]

######### Optimized parameter
control <- trainControl(method="repeatedcv", number=10, repeats=3)
tunegrid <- expand.grid(.mtry=c(1:10), .ntree=c(100,200,300,400,500))
custom <- train(Class~., data=internal , method=customRF, metric=c("Accuracy"), tuneGrid=tunegrid, trControl=control)
######Loop for 10-fold CV
RF = randomForest(Class ~ ., internal, ntree= as.numeric(custom$ bestTune[2]),mtry = as.numeric(custom$ bestTune[1]) ,orm.votes=TRUE,keep.forest=TRUE, importance=TRUE) ## Building RF on internal with the optimized parameter
predcv = table(external$Class, predict(RF, external))  ###### Prediction on external set
